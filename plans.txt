plans explain
----------------------------------------------------------------------------------------------------------------------------------------------------
 1 |
  ~ 10000    "QUERY PLAN"
       "Nested Loop  (cost=0.15..266.37 rows=50 width=532)"
       "  ->  Seq Scan on ""Cinema_sessions""  (cost=0.00..259.72 rows=50 width=24)"
       "        Filter: ((session_start_at)::date = CURRENT_DATE)"
       "  ->  Memoize  (cost=0.15..1.13 rows=1 width=524)"
       "        Cache Key: ""Cinema_sessions"".film_id"
       "        Cache Mode: logical"
       "        ->  Index Scan using ""Films_pkey"" on ""Films""  (cost=0.14..1.12 rows=1 width=524)"
       "              Index Cond: (id = ""Cinema_sessions"".film_id)"


   > 10000  "QUERY PLAN"
            "Nested Loop  (cost=1000.15..5881.17 rows=1267 width=532)"
            "  ->  Gather  (cost=1000.00..5848.84 rows=1267 width=24)"
            "        Workers Planned: 1"
            "        ->  Parallel Seq Scan on ""Cinema_sessions""  (cost=0.00..4722.14 rows=745 width=24)"
            "              Filter: ((session_start_at)::date = CURRENT_DATE)"
            "  ->  Memoize  (cost=0.15..0.21 rows=1 width=524)"
            "        Cache Key: ""Cinema_sessions"".film_id"
            "        Cache Mode: logical"
            "        ->  Index Scan using ""Films_pkey"" on ""Films""  (cost=0.14..0.20 rows=1 width=524)"
            "              Index Cond: (id = ""Cinema_sessions"".film_id)"

    Запрос выполнен успешно. Общее время выполнения: 70 msec.
    обработано строк: 10.



 2 |
 ~ 10000  "QUERY PLAN"
 "GroupAggregate  (cost=498.48..498.84 rows=4 width=16)"
 "  Group Key: ""Cinema_sessions"".film_id"
 "  ->  Sort  (cost=498.48..498.59 rows=42 width=16)"
 "        Sort Key: ""Cinema_sessions"".film_id"
 "        ->  Merge Join  (cost=0.57..497.35 rows=42 width=16)"
 "              Merge Cond: (""Cinema_sessions"".id = ""Tikets"".session_id)"
 "              ->  Index Scan using id on ""Cinema_sessions""  (cost=0.29..560.95 rows=50 width=16)"
 "                    Filter: (((session_start_at)::date <= CURRENT_DATE) AND ((session_start_at)::date >= ((CURRENT_DATE - '7 days'::interval))::date))"
 "              ->  Index Scan using ""fki_fk_Tikets_1"" on ""Tikets""  (cost=0.29..419.37 rows=8478 width=16)"

> 10000 "QUERY PLAN"
        "GroupAggregate  (cost=942.02..943.06 rows=4 width=16)"
        "  Group Key: ""Cinema_sessions"".film_id"
        "  ->  Sort  (cost=942.02..942.35 rows=133 width=16)"
        "        Sort Key: ""Cinema_sessions"".film_id"
        "        ->  Merge Join  (cost=4.20..937.33 rows=133 width=16)"
        "              Merge Cond: (""Cinema_sessions"".id = ""Tikets"".session_id)"
        "              ->  Index Scan using id on ""Cinema_sessions""  (cost=0.42..13775.48 rows=1267 width=16)"
        "                    Filter: (((session_start_at)::date <= CURRENT_DATE) AND ((session_start_at)::date >= ((CURRENT_DATE - '7 days'::interval))::date))"
        "              ->  Index Scan using ""fki_fk_Tikets_1"" on ""Tikets""  (cost=0.29..706.15 rows=26524 width=16)"

Запрос выполнен успешно. Общее время выполнения: 79 msec.
обработано строк: 9.


 3 |
 ~ 10000  "QUERY PLAN"
          "Group  (cost=404.75..438.05 rows=666 width=2202)"
          "  Group Key: ""Films"".name, ""Films"".duration, ""Manufacturers"".country, ""Directors"".first_name, ""Directors"".last_name, ""Films"".description, ""Rental_companies"".name, ""Films"".age_limits, ""Films"".actors, ""Cinema_sessions"".film_id, (ROW(""Films_attribute"".name, ' ', CASE WHEN (""Films_attributeValue"".value_text IS NOT NULL) THEN ""Films_attributeValue"".value_text WHEN (""Films_attributeValue"".value_boolean IS NOT NULL) THEN (""Films_attributeValue"".value_boolean)::text WHEN (""Films_attributeValue"".value_datetime IS NOT NULL) THEN (""Films_attributeValue"".value_datetime)::text WHEN (""Films_attributeValue"".value_int IS NOT NULL) THEN (""Films_attributeValue"".value_int)::text WHEN (""Films_attributeValue"".value_float IS NOT NULL) THEN (""Films_attributeValue"".value_float)::text ELSE NULL::text END))"
          "  ->  Sort  (cost=404.75..406.42 rows=666 width=2170)"
          "        Sort Key: ""Films"".name, ""Films"".duration, ""Manufacturers"".country, ""Directors"".first_name, ""Directors"".last_name, ""Films"".description, ""Rental_companies"".name, ""Films"".age_limits, ""Films"".actors, ""Cinema_sessions"".film_id, (ROW(""Films_attribute"".name, ' ', CASE WHEN (""Films_attributeValue"".value_text IS NOT NULL) THEN ""Films_attributeValue"".value_text WHEN (""Films_attributeValue"".value_boolean IS NOT NULL) THEN (""Films_attributeValue"".value_boolean)::text WHEN (""Films_attributeValue"".value_datetime IS NOT NULL) THEN (""Films_attributeValue"".value_datetime)::text WHEN (""Films_attributeValue"".value_int IS NOT NULL) THEN (""Films_attributeValue"".value_int)::text WHEN (""Films_attributeValue"".value_float IS NOT NULL) THEN (""Films_attributeValue"".value_float)::text ELSE NULL::text END))"
          "        ->  Hash Join  (cost=335.73..373.52 rows=666 width=2170)"
          "              Hash Cond: (""Films_attributeType"".attribute_id = ""Films_attribute"".id)"
          "              ->  Hash Join  (cost=16.98..37.11 rows=800 width=65)"
          "                    Hash Cond: (""Films_attributeValue"".attributetype_id = ""Films_attributeType"".id)"
          "                    ->  Seq Scan on ""Films_attributeValue""  (cost=0.00..18.00 rows=800 width=65)"
          "                    ->  Hash  (cost=13.10..13.10 rows=310 width=16)"
          "                          ->  Seq Scan on ""Films_attributeType""  (cost=0.00..13.10 rows=310 width=16)"
          "              ->  Hash  (cost=317.82..317.82 rows=75 width=2564)"
          "                    ->  Nested Loop  (cost=44.48..317.82 rows=75 width=2564)"
          "                          Join Filter: (""Films"".id = ""Films_attribute"".film_id)"
          "                          ->  Hash Join  (cost=44.33..310.94 rows=50 width=2146)"
          "                                Hash Cond: (""Films"".rental_company = ""Rental_companies"".id)"
          "                                ->  Hash Join  (cost=30.50..296.98 rows=50 width=1936)"
          "                                      Hash Cond: (""Films"".director = ""Directors"".id)"
          "                                      ->  Hash Join  (cost=13.30..279.65 rows=50 width=1728)"
          "                                            Hash Cond: (""Films"".manufacturer = ""Manufacturers"".id)"
          "                                            ->  Nested Loop  (cost=0.15..266.37 rows=50 width=1220)"
          "                                                  ->  Seq Scan on ""Cinema_sessions""  (cost=0.00..259.72 rows=50 width=8)"
          "                                                        Filter: ((session_start_at)::date = CURRENT_DATE)"
          "                                                  ->  Memoize  (cost=0.15..1.13 rows=1 width=1212)"
          "                                                        Cache Key: ""Cinema_sessions"".film_id"
          "                                                        Cache Mode: logical"
          "                                                        ->  Index Scan using ""Films_pkey"" on ""Films""  (cost=0.14..1.12 rows=1 width=1212)"
          "                                                              Index Cond: (id = ""Cinema_sessions"".film_id)"
          "                                            ->  Hash  (cost=11.40..11.40 rows=140 width=524)"
          "                                                  ->  Seq Scan on ""Manufacturers""  (cost=0.00..11.40 rows=140 width=524)"
          "                                      ->  Hash  (cost=13.20..13.20 rows=320 width=224)"
          "                                            ->  Seq Scan on ""Directors""  (cost=0.00..13.20 rows=320 width=224)"
          "                                ->  Hash  (cost=11.70..11.70 rows=170 width=226)"
          "                                      ->  Seq Scan on ""Rental_companies""  (cost=0.00..11.70 rows=170 width=226)"
          "                          ->  Memoize  (cost=0.15..1.13 rows=1 width=434)"
          "                                Cache Key: ""Cinema_sessions"".film_id"
          "                                Cache Mode: logical"
          "                                ->  Index Scan using ""fki_fk_Films_attribute_1"" on ""Films_attribute""  (cost=0.14..1.12 rows=1 width=434)"
          "                                      Index Cond: (film_id = ""Cinema_sessions"".film_id)"


> 10000  "QUERY PLAN"
         "Group  (cost=5863.76..8563.01 rows=16888 width=2202)"
         "  Group Key: ""Films"".name, ""Films"".duration, ""Manufacturers"".country, ""Directors"".first_name, ""Directors"".last_name, ""Films"".description, ""Rental_companies"".name, ""Films"".age_limits, ""Films"".actors, ""Cinema_sessions"".film_id, (ROW(""Films_attribute"".name, ' ', CASE WHEN (""Films_attributeValue"".value_text IS NOT NULL) THEN ""Films_attributeValue"".value_text WHEN (""Films_attributeValue"".value_boolean IS NOT NULL) THEN (""Films_attributeValue"".value_boolean)::text WHEN (""Films_attributeValue"".value_datetime IS NOT NULL) THEN (""Films_attributeValue"".value_datetime)::text WHEN (""Films_attributeValue"".value_int IS NOT NULL) THEN (""Films_attributeValue"".value_int)::text WHEN (""Films_attributeValue"".value_float IS NOT NULL) THEN (""Films_attributeValue"".value_float)::text ELSE NULL::text END))"
         "  ->  Incremental Sort  (cost=5863.76..7760.83 rows=16888 width=2170)"
         "        Sort Key: ""Films"".name, ""Films"".duration, ""Manufacturers"".country, ""Directors"".first_name, ""Directors"".last_name, ""Films"".description, ""Rental_companies"".name, ""Films"".age_limits, ""Films"".actors, ""Cinema_sessions"".film_id, (ROW(""Films_attribute"".name, ' ', CASE WHEN (""Films_attributeValue"".value_text IS NOT NULL) THEN ""Films_attributeValue"".value_text WHEN (""Films_attributeValue"".value_boolean IS NOT NULL) THEN (""Films_attributeValue"".value_boolean)::text WHEN (""Films_attributeValue"".value_datetime IS NOT NULL) THEN (""Films_attributeValue"".value_datetime)::text WHEN (""Films_attributeValue"".value_int IS NOT NULL) THEN (""Films_attributeValue"".value_int)::text WHEN (""Films_attributeValue"".value_float IS NOT NULL) THEN (""Films_attributeValue"".value_float)::text ELSE NULL::text END))"
         "        Presorted Key: ""Films"".name, ""Films"".duration, ""Manufacturers"".country, ""Directors"".first_name, ""Directors"".last_name, ""Films"".description, ""Rental_companies"".name, ""Films"".age_limits, ""Films"".actors, ""Cinema_sessions"".film_id"
         "        ->  Nested Loop  (cost=5863.68..7000.87 rows=16888 width=2170)"
         "              ->  Nested Loop  (cost=5863.52..6179.79 rows=6544 width=2564)"
         "                    ->  Nested Loop  (cost=5863.37..6043.44 rows=1900 width=2564)"
         "                          Join Filter: (""Films"".id = ""Films_attribute"".film_id)"
         "                          ->  Gather Merge  (cost=5863.21..6007.61 rows=1267 width=2146)"
         "                                Workers Planned: 1"
         "                                ->  Sort  (cost=4863.20..4865.07 rows=745 width=2146)"
         "                                      Sort Key: ""Films"".name, ""Films"".duration, ""Manufacturers"".country, ""Directors"".first_name, ""Directors"".last_name, ""Films"".description, ""Rental_companies"".name, ""Films"".age_limits, ""Films"".actors, ""Films"".id"
         "                                      ->  Merge Join  (cost=4812.76..4827.66 rows=745 width=2146)"
         "                                            Merge Cond: (""Cinema_sessions"".film_id = ""Films"".id)"
         "                                            ->  Sort  (cost=4757.68..4759.54 rows=745 width=8)"
         "                                                  Sort Key: ""Cinema_sessions"".film_id"
         "                                                  ->  Parallel Seq Scan on ""Cinema_sessions""  (cost=0.00..4722.14 rows=745 width=8)"
         "                                                        Filter: ((session_start_at)::date = CURRENT_DATE)"
         "                                            ->  Sort  (cost=55.08..55.23 rows=60 width=2138)"
         "                                                  Sort Key: ""Films"".id"
         "                                                  ->  Hash Join  (cost=38.31..53.31 rows=60 width=2138)"
         "                                                        Hash Cond: (""Directors"".id = ""Films"".director)"
         "                                                        ->  Seq Scan on ""Directors""  (cost=0.00..13.20 rows=320 width=224)"
         "                                                        ->  Hash  (cost=37.56..37.56 rows=60 width=1930)"
         "                                                              ->  Hash Join  (cost=24.62..37.56 rows=60 width=1930)"
         "                                                                    Hash Cond: (""Rental_companies"".id = ""Films"".rental_company)"
         "                                                                    ->  Seq Scan on ""Rental_companies""  (cost=0.00..11.70 rows=170 width=226)"
         "                                                                    ->  Hash  (cost=23.88..23.88 rows=60 width=1720)"
         "                                                                          ->  Hash Join  (cost=11.35..23.88 rows=60 width=1720)"
         "                                                                                Hash Cond: (""Manufacturers"".id = ""Films"".manufacturer)"
         "                                                                                ->  Seq Scan on ""Manufacturers""  (cost=0.00..11.40 rows=140 width=524)"
         "                                                                                ->  Hash  (cost=10.60..10.60 rows=60 width=1212)"
         "                                                                                      ->  Seq Scan on ""Films""  (cost=0.00..10.60 rows=60 width=1212)"
         "                          ->  Memoize  (cost=0.15..0.21 rows=1 width=434)"
         "                                Cache Key: ""Cinema_sessions"".film_id"
         "                                Cache Mode: logical"
         "                                ->  Index Scan using ""fki_fk_Films_attribute_1"" on ""Films_attribute""  (cost=0.14..0.20 rows=1 width=434)"
         "                                      Index Cond: (film_id = ""Cinema_sessions"".film_id)"
         "                    ->  Memoize  (cost=0.16..0.73 rows=2 width=16)"
         "                          Cache Key: ""Films_attribute"".id"
         "                          Cache Mode: logical"
         "                          ->  Index Scan using ""fki_fk_Films_attributeType_1"" on ""Films_attributeType""  (cost=0.15..0.72 rows=2 width=16)"
         "                                Index Cond: (attribute_id = ""Films_attribute"".id)"
         "              ->  Memoize  (cost=0.16..0.38 rows=4 width=65)"
         "                    Cache Key: ""Films_attributeType"".id"
         "                    Cache Mode: logical"
         "                    ->  Index Scan using ""fki_fk_Films_attributeValue_1"" on ""Films_attributeValue""  (cost=0.15..0.37 rows=4 width=65)"
         "                          Index Cond: (attributetype_id = ""Films_attributeType"".id)"

Запрос выполнен успешно. Общее время выполнения: 115 msec.
обработано строк: 49.


 4 |
 ~ 10000   "QUERY PLAN"
           "Limit  (cost=498.88..498.89 rows=3 width=16)"
           "  ->  Sort  (cost=498.88..498.89 rows=4 width=16)"
           "        Sort Key: (sum(""Tikets"".price)) DESC"
           "        ->  GroupAggregate  (cost=498.48..498.84 rows=4 width=16)"
           "              Group Key: ""Cinema_sessions"".film_id"
           "              ->  Sort  (cost=498.48..498.59 rows=42 width=16)"
           "                    Sort Key: ""Cinema_sessions"".film_id"
           "                    ->  Merge Join  (cost=0.57..497.35 rows=42 width=16)"
           "                          Merge Cond: (""Cinema_sessions"".id = ""Tikets"".session_id)"
           "                          ->  Index Scan using id on ""Cinema_sessions""  (cost=0.29..560.95 rows=50 width=16)"
           "                                Filter: (((session_start_at)::date <= CURRENT_DATE) AND ((session_start_at)::date >= ((CURRENT_DATE - '7 days'::interval))::date))"
           "                          ->  Index Scan using ""fki_fk_Tikets_1"" on ""Tikets""  (cost=0.29..419.37 rows=8478 width=16)"

> 10000   "QUERY PLAN"
          "Limit  (cost=943.10..943.10 rows=3 width=16)"
          "  ->  Sort  (cost=943.10..943.11 rows=4 width=16)"
          "        Sort Key: (sum(""Tikets"".price)) DESC"
          "        ->  GroupAggregate  (cost=942.02..943.06 rows=4 width=16)"
          "              Group Key: ""Cinema_sessions"".film_id"
          "              ->  Sort  (cost=942.02..942.35 rows=133 width=16)"
          "                    Sort Key: ""Cinema_sessions"".film_id"
          "                    ->  Merge Join  (cost=4.20..937.33 rows=133 width=16)"
          "                          Merge Cond: (""Cinema_sessions"".id = ""Tikets"".session_id)"
          "                          ->  Index Scan using id on ""Cinema_sessions""  (cost=0.42..13775.48 rows=1267 width=16)"
          "                                Filter: (((session_start_at)::date <= CURRENT_DATE) AND ((session_start_at)::date >= ((CURRENT_DATE - '7 days'::interval))::date))"
          "                          ->  Index Scan using ""fki_fk_Tikets_1"" on ""Tikets""  (cost=0.29..706.15 rows=26524 width=16)"

Запрос выполнен успешно. Общее время выполнения: 154 msec.
обработано строк: 12.


 5 |
  ~ 10000 "QUERY PLAN"
              "Sort  (cost=6568.83..6569.25 rows=166 width=125)"
              "  Sort Key: ""Scheme_halls"".seat"
              "  InitPlan 1 (returns $0)"
              "    ->  Index Scan using id on ""Cinema_sessions"" ""Cinema_sessions_1""  (cost=0.29..8.30 rows=1 width=8)"
              "          Index Cond: (id = 6)"
              "  ->  HashAggregate  (cost=6552.75..6554.41 rows=166 width=125)"
              "        Group Key: ""Scheme_halls"".seat, ""Cinema_halls"".name, ""Scheme_halls"".series, ""Scheme_halls"".status"
              "        ->  Merge Join  (cost=1.30..3726.75 rows=282600 width=125)"
              "              Merge Cond: (""Tikets"".session_id = ""Cinema_sessions"".id)"
              "              ->  Index Only Scan using ""fki_fk_Tikets_1"" on ""Tikets""  (cost=0.29..199.46 rows=8478 width=8)"
              "              ->  Materialize  (cost=0.43..5422.90 rows=334700 width=133)"
              "                    ->  Nested Loop  (cost=0.43..4586.15 rows=334700 width=133)"
              "                          ->  Index Scan using id on ""Cinema_sessions""  (cost=0.29..385.23 rows=3347 width=16)"
              "                                Filter: (cinema_hall_id = $0)"
              "                          ->  Materialize  (cost=0.15..17.41 rows=100 width=133)"
              "                                ->  Nested Loop  (cost=0.15..16.91 rows=100 width=133)"
              "                                      ->  Index Scan using ""Cinema_halls_pkey"" on ""Cinema_halls""  (cost=0.15..8.17 rows=1 width=116)"
              "                                            Index Cond: (id = $0)"
              "                                      ->  Seq Scan on ""Scheme_halls""  (cost=0.00..7.75 rows=100 width=25)"
              "                                            Filter: (hall_id = $0)"

> 10000  "QUERY PLAN"
         "Sort  (cost=20209.21..20209.62 rows=166 width=125)"
         "  Sort Key: ""Scheme_halls"".seat"
         "  InitPlan 1 (returns $0)"
         "    ->  Index Scan using id on ""Cinema_sessions"" ""Cinema_sessions_1""  (cost=0.42..8.44 rows=1 width=8)"
         "          Index Cond: (id = 6)"
         "  ->  HashAggregate  (cost=20192.99..20194.65 rows=166 width=125)"
         "        Group Key: ""Scheme_halls"".seat, ""Cinema_halls"".name, ""Scheme_halls"".series, ""Scheme_halls"".status"
         "        ->  Merge Join  (cost=3.64..11351.69 rows=884130 width=125)"
         "              Merge Cond: (""Tikets"".session_id = ""Cinema_sessions"".id)"
         "              ->  Index Only Scan using ""fki_fk_Tikets_1"" on ""Tikets""  (cost=0.29..550.15 rows=26524 width=8)"
         "              ->  Materialize  (cost=0.57..136086.12 rows=8448600 width=133)"
         "                    ->  Nested Loop  (cost=0.57..114964.62 rows=8448600 width=133)"
         "                          ->  Index Scan using id on ""Cinema_sessions""  (cost=0.42..9339.95 rows=84486 width=16)"
         "                                Filter: (cinema_hall_id = $0)"
         "                          ->  Materialize  (cost=0.15..17.41 rows=100 width=133)"
         "                                ->  Nested Loop  (cost=0.15..16.91 rows=100 width=133)"
         "                                      ->  Index Scan using ""Cinema_halls_pkey"" on ""Cinema_halls""  (cost=0.15..8.17 rows=1 width=116)"
         "                                            Index Cond: (id = $0)"
         "                                      ->  Seq Scan on ""Scheme_halls""  (cost=0.00..7.75 rows=100 width=25)"
         "                                            Filter: (hall_id = $0)"

Запрос выполнен успешно. Общее время выполнения: 119 msec.
обработано строк: 20.


 6 |
 ~ 10000 "QUERY PLAN"
         "Aggregate  (cost=27.33..27.34 rows=1 width=16)"
         "  ->  Bitmap Heap Scan on ""Tikets""  (cost=4.35..27.29 rows=8 width=8)"
         "        Recheck Cond: (session_id = 6)"
         "        ->  Bitmap Index Scan on ""fki_fk_Tikets_1""  (cost=0.00..4.34 rows=8 width=0)"
         "              Index Cond: (session_id = 6)"

 > 10000 "QUERY PLAN"
         "Aggregate  (cost=8.47..8.48 rows=1 width=16)"
         "  ->  Index Scan using ""fki_fk_Tikets_1"" on ""Tikets""  (cost=0.29..8.43 rows=8 width=8)"
         "        Index Cond: (session_id = 6)"

Запрос выполнен успешно. Общее время выполнения: 126 msec.
обработано строк: 3.
