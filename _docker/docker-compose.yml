services:
  app_1:
    container_name: ${COMPOSE_PROJECT_NAME}_app_1
    build:
      context: ./php
      dockerfile: Dockerfile
      args:
        - PUID=${PUID}
        - PGID=${PGID}
    volumes:
      - ./../:/var/www/
    depends_on:
      - redis
    networks:
      - app-network

  app_2:
    container_name: ${COMPOSE_PROJECT_NAME}_app_2
    build:
      context: ./php
      dockerfile: Dockerfile
      args:
        - PUID=${PUID}
        - PGID=${PGID}
    volumes:
      - ./../:/var/www/
    depends_on:
      - redis
    networks:
      - app-network

  nginx-proxy:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx-proxy
    build:
      context: ./nginx-proxy
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - nginx-balancer_1
      - nginx-balancer_2
    networks:
      - app-network

  nginx-balancer_1:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx-balancer_1
    build:
      context: ./nginx_balancer
      dockerfile: Dockerfile
    volumes:
      - ./../:/var/www/
    depends_on:
      - app_1
      - app_2
    networks:
      - app-network

  nginx-balancer_2:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx-balancer_2
    build:
      context: ./nginx_balancer
      dockerfile: Dockerfile
    volumes:
      - ./../:/var/www/
    depends_on:
      - app_1
      - app_2
    networks:
      - app-network

  redis:
    image: redis:5.0-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

