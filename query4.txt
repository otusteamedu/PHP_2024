3 самых прибыльных фильма за неделю
select m.id, m.title, sum(t.price) as total
from order_ticket as ot
         left join orders as o on ot.order_id = o.id
         left join tickets as t on t.id = ot.ticket_id
         left join sessions as s on s.id = t.session_id
         left join movies as m on m.id = s.movie_id
where
    status_id = 2
    and extract(week from o.created_at) = extract(week from now())
    and o.deleted_at is null
group by m.id
order by total desc
limit 3;

Результат:
+--+--------+-----+
|id|title   |total|
+--+--------+-----+
|2 |Movie #2|75.65|
|1 |Movie #1|69.5 |
|8 |Movie #8|41.23|
+--+--------+-----+

План для числа записей менее 10000 записей
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|QUERY PLAN                                                                                                                                                               |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|Limit  (cost=46.78..46.78 rows=3 width=556)                                                                                                                              |
|  ->  Sort  (cost=46.78..46.79 rows=6 width=556)                                                                                                                         |
|        Sort Key: (sum(t.price)) DESC                                                                                                                                    |
|        ->  GroupAggregate  (cost=46.58..46.70 rows=6 width=556)                                                                                                         |
|              Group Key: m.id                                                                                                                                            |
|              ->  Sort  (cost=46.58..46.59 rows=6 width=530)                                                                                                             |
|                    Sort Key: m.id                                                                                                                                       |
|                    ->  Nested Loop Left Join  (cost=3.98..46.50 rows=6 width=530)                                                                                       |
|                          ->  Nested Loop Left Join  (cost=3.83..45.37 rows=6 width=14)                                                                                  |
|                                ->  Nested Loop Left Join  (cost=3.56..43.59 rows=6 width=14)                                                                            |
|                                      ->  Hash Join  (cost=3.26..14.82 rows=6 width=8)                                                                                   |
|                                            Hash Cond: (ot.order_id = o.id)                                                                                              |
|                                            ->  Seq Scan on order_ticket ot  (cost=0.00..9.93 rows=593 width=16)                                                         |
|                                            ->  Hash  (cost=3.25..3.25 rows=1 width=8)                                                                                   |
|                                                  ->  Seq Scan on orders o  (cost=0.00..3.25 rows=1 width=8)                                                             |
|                                                        Filter: ((deleted_at IS NULL) AND (status_id = 2) AND (EXTRACT(week FROM created_at) = EXTRACT(week FROM now())))|
|                                      ->  Index Scan using tickets_pkey on tickets t  (cost=0.29..4.80 rows=1 width=22)                                                  |
|                                            Index Cond: (id = ot.ticket_id)                                                                                              |
|                                ->  Index Scan using sessions_pkey on sessions s  (cost=0.28..0.30 rows=1 width=16)                                                      |
|                                      Index Cond: (id = t.session_id)                                                                                                    |
|                          ->  Index Scan using movies_pkey on movies m  (cost=0.14..0.19 rows=1 width=524)                                                               |
|                                Index Cond: (id = s.movie_id)                                                                                                            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

План для числа записей для ~10000 записей
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|QUERY PLAN                                                                                                                                                               |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|Limit  (cost=764.16..764.16 rows=3 width=50)                                                                                                                             |
|  ->  Sort  (cost=764.16..764.29 rows=52 width=50)                                                                                                                       |
|        Sort Key: (sum(t.price)) DESC                                                                                                                                    |
|        ->  GroupAggregate  (cost=762.44..763.48 rows=52 width=50)                                                                                                       |
|              Group Key: m.id                                                                                                                                            |
|              ->  Sort  (cost=762.44..762.57 rows=52 width=24)                                                                                                           |
|                    Sort Key: m.id                                                                                                                                       |
|                    ->  Nested Loop Left Join  (cost=152.60..760.96 rows=52 width=24)                                                                                    |
|                          ->  Nested Loop Left Join  (cost=152.32..745.40 rows=52 width=14)                                                                              |
|                                ->  Nested Loop Left Join  (cost=152.04..729.62 rows=52 width=14)                                                                        |
|                                      ->  Hash Join  (cost=151.61..673.82 rows=52 width=8)                                                                               |
|                                            Hash Cond: (ot.order_id = o.id)                                                                                              |
|                                            ->  Seq Scan on order_ticket ot  (cost=0.00..446.22 rows=28922 width=16)                                                     |
|                                            ->  Hash  (cost=151.50..151.50 rows=9 width=8)                                                                               |
|                                                  ->  Seq Scan on orders o  (cost=0.00..151.50 rows=9 width=8)                                                           |
|                                                        Filter: ((deleted_at IS NULL) AND (status_id = 2) AND (EXTRACT(week FROM created_at) = EXTRACT(week FROM now())))|
|                                      ->  Index Scan using tickets_pkey on tickets t  (cost=0.42..1.07 rows=1 width=22)                                                  |
|                                            Index Cond: (id = ot.ticket_id)                                                                                              |
|                                ->  Index Scan using sessions_pkey on sessions s  (cost=0.29..0.30 rows=1 width=16)                                                      |
|                                      Index Cond: (id = t.session_id)                                                                                                    |
|                          ->  Index Scan using movies_pkey on movies m  (cost=0.28..0.30 rows=1 width=18)                                                                |
|                                Index Cond: (id = s.movie_id)                                                                                                            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

План для числа записей для ~10000000 записей
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|QUERY PLAN                                                                                                                                                                           |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|Limit  (cost=6709.24..6709.25 rows=3 width=53)                                                                                                                                       |
|  ->  Sort  (cost=6709.24..6710.25 rows=404 width=53)                                                                                                                                |
|        Sort Key: (sum(t.price)) DESC                                                                                                                                                |
|        ->  Finalize GroupAggregate  (cost=6665.65..6704.02 rows=404 width=53)                                                                                                       |
|              Group Key: m.id                                                                                                                                                        |
|              ->  Gather Merge  (cost=6665.65..6697.19 rows=238 width=53)                                                                                                            |
|                    Workers Planned: 1                                                                                                                                               |
|                    ->  Partial GroupAggregate  (cost=5665.64..5670.40 rows=238 width=53)                                                                                            |
|                          Group Key: m.id                                                                                                                                            |
|                          ->  Sort  (cost=5665.64..5666.24 rows=238 width=27)                                                                                                        |
|                                Sort Key: m.id                                                                                                                                       |
|                                ->  Nested Loop Left Join  (cost=1511.22..5656.25 rows=238 width=27)                                                                                 |
|                                      ->  Nested Loop Left Join  (cost=1510.80..4689.36 rows=238 width=14)                                                                           |
|                                            ->  Nested Loop Left Join  (cost=1510.51..4617.17 rows=238 width=14)                                                                     |
|                                                  ->  Hash Join  (cost=1510.09..4488.17 rows=238 width=8)                                                                            |
|                                                        Hash Cond: (ot.order_id = o.id)                                                                                              |
|                                                        ->  Parallel Seq Scan on order_ticket ot  (cost=0.00..2619.79 rows=136479 width=16)                                          |
|                                                        ->  Hash  (cost=1509.00..1509.00 rows=87 width=8)                                                                            |
|                                                              ->  Seq Scan on orders o  (cost=0.00..1509.00 rows=87 width=8)                                                         |
|                                                                    Filter: ((deleted_at IS NULL) AND (status_id = 2) AND (EXTRACT(week FROM created_at) = EXTRACT(week FROM now())))|
|                                                  ->  Index Scan using tickets_pkey on tickets t  (cost=0.42..0.54 rows=1 width=22)                                                  |
|                                                        Index Cond: (id = ot.ticket_id)                                                                                              |
|                                            ->  Index Scan using sessions_pkey on sessions s  (cost=0.29..0.30 rows=1 width=16)                                                      |
|                                                  Index Cond: (id = t.session_id)                                                                                                    |
|                                      ->  Index Scan using movies_pkey on movies m  (cost=0.42..4.06 rows=1 width=21)                                                                |
|                                            Index Cond: (id = s.movie_id)                                                                                                            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


Оптимизация
Добавить частичный индекс по status_id для не удаленных записей
create index orders_status_id_index
    on orders (status_id)
    where orders.deleted_at is null ;

План запроса
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
|QUERY PLAN                                                                                                                                                 |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
|Limit  (cost=6169.86..6169.87 rows=3 width=53)                                                                                                             |
|  ->  Sort  (cost=6169.86..6170.87 rows=404 width=53)                                                                                                      |
|        Sort Key: (sum(t.price)) DESC                                                                                                                      |
|        ->  Finalize GroupAggregate  (cost=6126.27..6164.64 rows=404 width=53)                                                                             |
|              Group Key: m.id                                                                                                                              |
|              ->  Gather Merge  (cost=6126.27..6157.81 rows=238 width=53)                                                                                  |
|                    Workers Planned: 1                                                                                                                     |
|                    ->  Partial GroupAggregate  (cost=5126.26..5131.02 rows=238 width=53)                                                                  |
|                          Group Key: m.id                                                                                                                  |
|                          ->  Sort  (cost=5126.26..5126.86 rows=238 width=27)                                                                              |
|                                Sort Key: m.id                                                                                                             |
|                                ->  Nested Loop Left Join  (cost=971.84..5116.87 rows=238 width=27)                                                        |
|                                      ->  Nested Loop Left Join  (cost=971.42..4149.99 rows=238 width=14)                                                  |
|                                            ->  Nested Loop Left Join  (cost=971.13..4077.79 rows=238 width=14)                                            |
|                                                  ->  Hash Join  (cost=970.71..3948.79 rows=238 width=8)                                                   |
|                                                        Hash Cond: (ot.order_id = o.id)                                                                    |
|                                                        ->  Parallel Seq Scan on order_ticket ot  (cost=0.00..2619.79 rows=136479 width=16)                |
|                                                        ->  Hash  (cost=969.62..969.62 rows=87 width=8)                                                    |
|                                                              ->  Bitmap Heap Scan on orders o  (cost=194.64..969.62 rows=87 width=8)                      |
|                                                                    Recheck Cond: ((status_id = 2) AND (deleted_at IS NULL))                               |
|                                                                    Filter: (EXTRACT(week FROM created_at) = EXTRACT(week FROM now()))                     |
|                                                                    ->  Bitmap Index Scan on orders_status_id_index  (cost=0.00..194.62 rows=17377 width=0)|
|                                                                          Index Cond: (status_id = 2)                                                      |
|                                                  ->  Index Scan using tickets_pkey on tickets t  (cost=0.42..0.54 rows=1 width=22)                        |
|                                                        Index Cond: (id = ot.ticket_id)                                                                    |
|                                            ->  Index Scan using sessions_pkey on sessions s  (cost=0.29..0.30 rows=1 width=16)                            |
|                                                  Index Cond: (id = t.session_id)                                                                          |
|                                      ->  Index Scan using movies_pkey on movies m  (cost=0.42..4.06 rows=1 width=21)                                      |
|                                            Index Cond: (id = s.movie_id)                                                                                  |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
