version: '3.8'

networks:
  app_network:
    name: ${APP_NAME}_network

services:

  nginx:
    image: nginx:latest
    container_name: ${APP_NAME}_nginx
    ports:
      - "${APP_PORT}:80"
    volumes:
      - .:/var/www/app
      - ./docker/nginx/app.conf:/etc/nginx/conf.d/app.conf
    networks:
      - app_network

  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: ${APP_NAME}_php
    env_file: .env
    ports:
      - "9000:9000"
    volumes:
      - .:/var/www/app
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ${APP_NAME}_rabbitmq
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "15672:15672"
    volumes:
      - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./docker/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - app_network

#  postgres:
#    image: postgres:latest
#    container_name: ${APP_NAME}_postgres
#    ports:
#      - "${DB_PORT}:5432"
#    restart: on-failure
#    environment:
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      POSTGRES_DB: ${DB_NAME}
#    volumes:
#      - ./postgres/data:/var/lib/postgresql/data:rw
#    networks:
#      - app_network