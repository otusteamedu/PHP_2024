version: '3.8'

networks:
  app_network:
    name: ${APP_NAME}_network

services:

  nginx:
    image: nginx:latest
    container_name: ${APP_NAME}_nginx
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./app:/var/www/app
      - ./nginx/app.conf:/etc/nginx/conf.d/app.conf
    networks:
      - app_network

  php:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: ${APP_NAME}_php
    env_file: .env
    ports:
      - "9000:9000"
    volumes:
      - ./app:/var/www/app
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: ${APP_NAME}_postgres
    ports:
      - "${DB_PORT}:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data:rw
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: ${APP_NAME}_redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - app_network

  memcached:
    image: memcached:latest
    container_name: ${APP_NAME}_memcached
    ports:
      - "${MEMCACHED_PORT}:11211"
    restart: always
    networks:
      - app_network
