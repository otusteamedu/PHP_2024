version: "3.3"

networks:
  balancer-network:
    driver: bridge

volumes:
  redis_1_data: {}
  redis_2_data: {}
  redis_3_data: {}
  redis_4_data: {}
  redis_5_data: {}
  redis_6_data: {}

services:

  balancer-nginx:
    image: nginx
    container_name: balancer-nginx
    hostname: balancer-nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./app:/data
      - ./docker/nginx/hosts/mysite.local.balancer.conf:/etc/nginx/conf.d/mysite.local.balancer.conf
    networks:
      - balancer-network

  nginx-one:
    image: nginx
    container_name: nginx-one
    hostname: nginx-one
    restart: always
    volumes:
      - ./app:/data
      - ./docker/nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/mysite.local.conf
    networks:
      - balancer-network

  nginx-two:
    image: nginx
    container_name: nginx-two
    hostname: nginx-two
    restart: always
    volumes:
      - ./app:/data
      - ./docker/nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/mysite.local.conf
    networks:
      - balancer-network

  app-one:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: balancer-app
    container_name: app-one
    hostname: app-one
    restart: always
    environment:
      APP_IP: ${APP_IP}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ./app:/data
    networks:
      - balancer-network

  app-two:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: balancer-app
    container_name: app-two
    hostname: app-two
    restart: always
    environment:
      APP_IP: ${APP_IP}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ./app:/data
    networks:
      - balancer-network

  redis_1:
    image: redis
    hostname: redis_1
    container_name: redis_1
    restart: always
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6381:6381"
      - "16381:16381"
    networks:
      - balancer-network
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: 'redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}" --port 6381'
    volumes:
      - redis_1_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_2:
    image: redis
    hostname: redis_2
    container_name: redis_2
    restart: always
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6382:6382"
      - "16382:16382"
    networks:
      - balancer-network
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: 'redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}" --port 6382'
    volumes:
      - redis_2_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_3:
    image: redis
    hostname: redis_3
    container_name: redis_3
    restart: always
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6383:6383"
      - "16383:16383"
    networks:
      - balancer-network
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: 'redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}" --port 6383'
    volumes:
      - redis_3_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_4:
    image: redis
    hostname: redis_4
    container_name: redis_4
    restart: always
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6384:6384"
      - "16384:16384"
    networks:
      - balancer-network
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: 'redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}" --port 6384'
    volumes:
      - redis_4_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_5:
    image: redis
    hostname: redis_5
    container_name: redis_5
    restart: always
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6385:6385"
      - "16385:16385"
    networks:
      - balancer-network
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: 'redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}" --port 6385'
    volumes:
      - redis_5_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_6:
    image: redis
    hostname: redis_6
    container_name: redis_6
    restart: always
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6386:6386"
      - "16386:16386"
    networks:
      - balancer-network
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: 'redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}" --port 6386'
    volumes:
      - redis_6_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_cluster:
    image: redis
    container_name: redis_cluster
    sysctls:
      - net.core.somaxconn=65536
    networks:
      - balancer-network
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    tty: true
    command: 'redis-cli --cluster create ${APP_IP}:6381 ${APP_IP}:6382 ${APP_IP}:6383 ${APP_IP}:6384 ${APP_IP}:6385 ${APP_IP}:6386 --cluster-replicas 1 --cluster-yes -a "${REDIS_PASSWORD}"'
    depends_on:
      - redis_1
      - redis_2
      - redis_3
      - redis_4
      - redis_5
      - redis_6
