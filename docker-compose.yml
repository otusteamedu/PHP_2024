# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #Контейнер с PHP, назовём его app
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    depends_on:
      - redis
    volumes:
      - ./code:/data/mysite.local
    env_file:
      - ./.env
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #контейнер с Nginx
  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    # проброс портов
    ports:
      - "80:80"
      - "443:443"
    volumes:
       - ./code:/data/mysite.local
    networks:
      - app-network

  # контейнер с MySQL
  # строим на базе стандартного образа
  db:
    image: mysql:5.7.22
    container_name: ${MYSQL_HOST}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    # описываем, какую БД мы создаём
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./dbdata:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis
    restart: always
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - app-network

  memcached:
    image: memcached
    container_name: memcached
    ports:
      - ${MEMCACHED_PORT}:${MEMCACHED_PORT}



#Docker Networks
networks:
  app-network:
    driver: bridge
