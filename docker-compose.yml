version: '3'

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    image: "${PROJECT_NAME}:nginx"
    container_name: "${PROJECT_NAME}-nginx"
    ports:
      - "80:80"
    volumes:
      - ./app:/www/mysite.local
      - ./docker/logs/nginx:/var/log/nginx/
    networks:
      - app-network
    depends_on:
      - app

  app:
    build:
      context: ./docker/fpm
      dockerfile: Dockerfile
    image: "${PROJECT_NAME}:fpm"
    container_name: "${PROJECT_NAME}-app"
    volumes:
      - ./app:/www/mysite.local
      - ./docker/logs/php.log:/var/log/fpm-php.www.log
    networks:
      - app-network
    env_file:
      - .env

  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    container_name: "${PROJECT_NAME}-redis"
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/d–∞ta:/root/redis
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - REDIS_DATABASES=${REDIS_DATABASES}
    networks:
      - app-network

  memcached:
    image: sameersbn/memcached:1.5.6-2
    container_name: "${PROJECT_NAME}-memcached"
    ports:
      - "11211:11211"
    restart: unless-stopped
    networks:
      - app-network

  postgresql:
    image: postgres:14.7-alpine
    container_name: "${PROJECT_NAME}-postgresql"
    environment:
      POSTGRES_USER: "${PGSQL_USERNAME}"
      POSTGRES_PASSWORD: "${PGSQL_PASSWORD}"
      POSTGRES_DB: "${PGSQL_DATABASE}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgresql/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./docker/postgresql/db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge