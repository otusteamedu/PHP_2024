; https://php.net/manual/en/install.fpm.configuration.php

[www]
; The address on which to accept FastCGI requests.
; Valid syntaxes are:
;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
;                            a specific port;
;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
;                            a specific port;
;   'port'                 - to listen on a TCP socket to all addresses
;                            (IPv6 and IPv4-mapped) on a specific port;
;   '/path/to/unix/socket' - to listen on a unix socket.
; Note: This value is mandatory.
listen = 9000

user = apache
group = apache

; pm string
;  Choose how the process manager will control the number of child processes.
; Possible values: static, ondemand, dynamic. This option is mandatory.
;  static - the number of child processes is fixed (pm.max_children).
;  ondemand - the processes spawn on demand (when requested, as opposed to dynamic,
; where pm.start_servers are started when the service is started.
;  dynamic - the number of child processes is set dynamically
; based on the following directives: pm.max_children, pm.start_servers, pm.min_spare_servers, pm.max_spare_servers.
pm = ondemand

; pm.max_children int
; The number of child processes to be created when pm is set to static and the maximum number
; of child processes to be created when pm is set to dynamic. This option is mandatory.
; This option sets the limit on the number of simultaneous requests that will be served.
; Equivalent to the ApacheMaxClients directive with mpm_prefork and to the PHP_FCGI_CHILDREN
; environment variable in the original PHP FastCGI.
pm.max_children = 100

; pm.process_idle_timeout sets how long a children waits without work before it gets destroyed. It is defined in seconds.
pm.process_idle_timeout = 60

; pm.max_requests defines how many requests (one at a time) a children
; will process before it gets destroyed.
; For example, if you set this variable a value of 50,
; a children will process 50 requests and closes itself.
; If FPM master process still needs another children, it will fork a new one.
pm.max_requests = 200

; request_terminate_timeout mixed
; The timeout for serving a single request after which the worker process will be killed.
; This option should be used when the 'max_execution_time' ini option does not stop
; script execution for some reason. A value of '0' means 'Off'.
; Available units: s(econds)(default), m(inutes), h(ours), or d(ays). Default value: 0.
request_terminate_timeout = 60m

; catch_workers_output boolean
;  Redirect worker stdout and stderr into main error log.
; If not set, stdout and stderr will be redirected to /dev/null according to FastCGI specs. Default value: no.
catch_workers_output = yes

; access.log string
; The access log file. Default value: not set
access.log  = /var/log/php-fpm/access.log

php_admin_value[error_log] = /var/log/php-fpm/access.log
php_admin_flag[log_errors] = on

; clear_env boolean
; Clear environment in FPM workers.
; Prevents arbitrary environment variables from reaching FPM worker processes
; by clearing the environment in workers before env vars specified in this pool configuration are added.
; Since PHP 5.4.27, 5.5.11, and 5.6.0. Default value: Yes.
clear_env = no
; Не очищаем окружение, чтобы включать/выключать режим разработки через APPLICATION_ENV

php_admin_value[memory_limit] = 2G
php_admin_value[upload_max_filesize] = 1024M
php_admin_value[post_max_size] = 1024M
php_admin_value[max_execution_time] = 600
