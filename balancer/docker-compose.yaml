version: '3'

services:
  nginx-balancer:
    build:
      context: ./nginx/balancer
      dockerfile: Dockerfile
    container_name: nginx-balancer
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - nginx1
      - nginx2

  nginx1:
    build:
      context: ./nginx/proxy
      dockerfile: Dockerfile
    container_name: nginx1
    volumes:
      - ./app:/data/mysite.local
    networks:
      - app-network
    depends_on:
      - app1
      - app2
      - app3

  nginx2:
    build:
      context: ./nginx/proxy
      dockerfile: Dockerfile
    container_name: nginx2
    volumes:
      - ./app:/data/mysite.local
    networks:
      - app-network
    depends_on:
      - app1
      - app2
      - app3

  app1:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php
    container_name: app1
    volumes:
       - ./app:/data/mysite.local
    networks:
      - app-network

  app2:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php
    container_name: app2
    volumes:
      - ./app:/data/mysite.local
    networks:
      - app-network

  app3:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php
    container_name: app3
    volumes:
      - ./app:/data/mysite.local
    networks:
      - app-network

  redis1:
    image: redis:6.2
    container_name: redis1
    command: [ "redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/data/nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes" ]
    volumes:
      - redis1-data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

  redis2:
    image: redis:6.2
    container_name: redis2
    command: [ "redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/data/nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes" ]
    volumes:
      - redis2-data:/data
    ports:
      - "6380:6379"
    networks:
      - app-network

  redis3:
    image: redis:6.2
    container_name: redis3
    command: [ "redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/data/nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes" ]
    volumes:
      - redis3-data:/data
    ports:
      - "6381:6379"
    networks:
      - app-network

  redis4:
    image: redis:6.2
    container_name: redis4
    command: [ "redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/data/nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes" ]
    volumes:
      - redis4-data:/data
    ports:
      - "6382:6379"
    networks:
      - app-network

  redis5:
    image: redis:6.2
    container_name: redis5
    command: [ "redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/data/nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes" ]
    volumes:
      - redis5-data:/data
    ports:
      - "6383:6379"
    networks:
      - app-network

  redis6:
    image: redis:6.2
    container_name: redis6
    command: [ "redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/data/nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes" ]
    volumes:
      - redis6-data:/data
    ports:
      - "6384:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis1-data:
  redis2-data:
  redis3-data:
  redis4-data:
  redis5-data:
  redis6-data: