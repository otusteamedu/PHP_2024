# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    # проброс портов
    ports:
      - "80:80"
    volumes:
      - ./var/www:/data/myfirst.docker
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    env_file:
      - .env
    volumes:
      - ./var/www:/data/myfirst.docker
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  memcached:
    image: memcached:latest
    container_name: memcached
    ports:
      - ${MEMCACHED_PORT}:${MEMCACHED_PORT}
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: sh -c 'exec redis-server --requirepass "$REDIS_PASSWORD"'
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: myfirstsyte
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - /var/mysql:/var/lib/mysql
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge