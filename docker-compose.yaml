version: '3'

services:

    #Nginx Service
    nginx-balancer:
        image: nginx:latest
        container_name: nginx-balancer
        ports:
            - "80:80"
        volumes:
            - ./docker/nginx/hosts/mysite.local.balancer.conf:/etc/nginx/conf.d/mysite.local.balancer.conf
        networks:
            - docker-network

    nginx1:
        image: nginx:latest
        container_name: nginx1
        volumes:
            - ./code:/data/mysite.local
            - ./docker/nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/mysite.local.conf
        networks:
            - docker-network

    nginx2:
        image: nginx:latest
        container_name: nginx2
        volumes:
            - ./code:/data/mysite.local
            - ./docker/nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/mysite.local.conf
        networks:
            - docker-network

    #PHP Service
    php1:
        build:
            context: ./docker/php-fpm
            dockerfile: Dockerfile
        image: myapp/php
        container_name: app1
        volumes:
            - ./code:/data/mysite.local
        networks:
            - docker-network

    php2:
        build:
            context: ./docker/php-fpm
            dockerfile: Dockerfile
        image: myapp/php
        container_name: app2
        volumes:
            - ./code:/data/mysite.local
        networks:
            - docker-network

    redis_1:
        image: redis
        hostname: redis_1
        container_name: redis_1
        restart: always
        sysctls:
            - net.core.somaxconn=65536
        networks:
            - docker-network
        command: 'redis-server /usr/local/etc/redis/redis.conf'
        volumes:
            - redis_1_data:/data
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

    redis_2:
        image: redis
        hostname: redis_2
        container_name: redis_2
        restart: always
        sysctls:
            - net.core.somaxconn=65536
        networks:
            - docker-network
        command: 'redis-server /usr/local/etc/redis/redis.conf'
        volumes:
            - redis_2_data:/data
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

    redis_3:
        image: redis
        hostname: redis_3
        container_name: redis_3
        restart: always
        sysctls:
            - net.core.somaxconn=65536
        networks:
            - docker-network
        command: 'redis-server /usr/local/etc/redis/redis.conf'
        volumes:
            - redis_3_data:/data
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

    redis_4:
        image: redis
        hostname: redis_4
        container_name: redis_4
        restart: always
        sysctls:
            - net.core.somaxconn=65536
        networks:
            - docker-network
        command: 'redis-server /usr/local/etc/redis/redis.conf'
        volumes:
            - redis_4_data:/data
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

    redis_5:
        image: redis
        hostname: redis_5
        container_name: redis_5
        restart: always
        sysctls:
            - net.core.somaxconn=65536
        networks:
            - docker-network
        command: 'redis-server /usr/local/etc/redis/redis.conf'
        volumes:
            - redis_5_data:/data
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

    redis_6:
        image: redis
        hostname: redis_6
        container_name: redis_6
        restart: always
        sysctls:
            - net.core.somaxconn=65536
        networks:
            - docker-network
        command: 'redis-server /usr/local/etc/redis/redis.conf'
        volumes:
            - redis_6_data:/data
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

    redis_cluster:
        image: redis:latest
        container_name: redis_cluster
        sysctls:
            - net.core.somaxconn=65536
        networks:
            - docker-network
        tty: true
        command: "redis-cli --cluster create redis_1:6379 redis_2:6379 redis_3:6379 redis_4:6379 redis_5:6379 redis_6:6379 --cluster-replicas 1 --cluster-yes"
        depends_on:
            - redis_1
            - redis_2
            - redis_3
            - redis_4
            - redis_5
            - redis_6

#Docker Networks
networks:
    docker-network:
        driver: bridge

volumes:
    redis_1_data: {}
    redis_2_data: {}
    redis_3_data: {}
    redis_4_data: {}
    redis_5_data: {}
    redis_6_data: {}
