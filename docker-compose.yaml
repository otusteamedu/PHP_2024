# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнеры с Nginx
  balancer:
    image: nginx:latest
    depends_on:
      - nginx1
      - nginx2
    container_name: "${APP_NAME}_nginx_balancer"
    volumes:
      - ./:/${APP_NAME}
      - ./Docker/nginx/confbalancer.d:/etc/nginx/conf.d
    ports:
      - "81:80"
  nginx1:
    image: nginx:latest
    depends_on:
      - app2
    container_name: "${APP_NAME}_nginx1"
    volumes:
      - ./:/${APP_NAME}
      - ./Docker/nginx/conf1.d:/etc/nginx/conf.d
      - sock1:/sock1/
      - sock2:/sock2/
  nginx2:
    image: nginx:latest
    depends_on:
      - app2
    container_name: "${APP_NAME}_nginx2"
    volumes:
      - ./:/${APP_NAME}
      - ./Docker/nginx/conf2.d:/etc/nginx/conf.d
      - sock1:/sock1/
      - sock2:/sock2/

  #Контейнер с PHP-FPM, назовём его app
  app1:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./Docker/php
      dockerfile: Dockerfile
    container_name: "${APP_NAME}_app1" # имя контейнера после запуска
    volumes:
      - ./:/${APP_NAME}
      - sock1:/sock/
    depends_on:
      - db
  #Контейнер с PHP-FPM(2), назовём его app
  app2:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./Docker/php
      dockerfile: Dockerfile
    container_name: "${APP_NAME}_app2" # имя контейнера после запуска
    volumes:
      - ./:/${APP_NAME}
      - sock2:/sock/
    depends_on:
      - db
  #контейнер с Mysql
  db:
    image: mysql:8.0
    restart: always
    container_name: "${APP_NAME}_db"
    volumes:
      - ./tmp/db:/var/lib/mysql
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: '${DB_NAME}'
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
  #контейнер с Redis
  redis:
    image: redis:7.4
    container_name: "${APP_NAME}_redis"
  #контейнер с Memcache
  memcached:
    image: memcached:latest
    container_name: "${APP_NAME}_memcached"

#общие volume
volumes:
  sock1:
    driver: local
  sock2:
    driver: local
