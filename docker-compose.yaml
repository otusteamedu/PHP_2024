# версия синтаксиса
version: "3"

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  balance_nginx:
    build:
      context: ./nginx_balancer
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: balance_nginx
    # проброс портов
    ports:
      - "80:80"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  nginx1:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: nginx1
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  nginx2:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: nginx2
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app1:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app1 # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite.local
    depends_on:
      # redis-server container will start first
      - redis
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app2:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app2 # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite.local
    depends_on:
      # redis-server container will start first
      - redis
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    container_name: redis
    volumes:
      - ./redis:/root/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
