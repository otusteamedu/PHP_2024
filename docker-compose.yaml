# версия синтаксиса
version: '3'
volumes:
  redis_1_data: {}
  redis_2_data: {}
  redis_3_data: {}
  redis_4_data: {}
  redis_5_data: {}
  redis_6_data: {}
# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер  nginx-upstream
  nginx-upstream:
    build:
      context: docker/nginx-upstream
      dockerfile: Dockerfile
    image: balance/nginx-upstream
    container_name:  nginx-upstream
    # проброс портов
    ports:
      - "80:80"
    networks:
      - app-network
  #первый контейнер с Nginx
  nginx1:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: nginx1
    # проброс портов
    ports:
      - "80"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
  #контейнер с Nginx
  nginx2:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: nginx2
    # проброс портов
    ports:
      - "80"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app1:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: docker/fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app1 # имя контейнера после запуска
    volumes:
       - ./code:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app2:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: docker/fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app2 # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

#redis cluster
  redis_1:
    image: redis:latest
    restart: always
    container_name: redis_1
    hostname: redis_1
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6381:6380"
    networks:
      - app-network
    command: "redis-server /usr/local/etc/redis/redis.conf"
    volumes:
      - redis_1_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_2:
    image: redis:latest
    restart: always
    container_name: redis_2
    hostname: redis_2
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6382:6380"
    networks:
      - app-network
    command: "redis-server /usr/local/etc/redis/redis.conf"
    volumes:
      - redis_2_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_3:
    image: redis:latest
    restart: always
    container_name: redis_3
    hostname: redis_3
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6383:6380"
    networks:
      - app-network
    command: "redis-server /usr/local/etc/redis/redis.conf"
    volumes:
      - redis_3_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_4:
    image: redis:latest
    restart: always
    container_name: redis_4
    hostname: redis_4
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6384:6380"
    networks:
      - app-network
    command: "redis-server /usr/local/etc/redis/redis.conf"
    volumes:
      - redis_4_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_5:
    image: redis:latest
    restart: always
    container_name: redis_5
    hostname: redis_5
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6385:6380"
    networks:
      - app-network
    command: "redis-server /usr/local/etc/redis/redis.conf"
    volumes:
      - redis_5_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_6:
    image: redis:latest
    restart: always
    container_name: redis_6
    hostname: redis_6
    sysctls:
      - net.core.somaxconn=65536
    ports:
      - "6386:6380"
    networks:
      - app-network
    command: "redis-server /usr/local/etc/redis/redis.conf"
    volumes:
      - redis_6_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  redis_cluster:
    image: redis:latest
    container_name: redis_cluster
    hostname: redis_6
    sysctls:
      - net.core.somaxconn=65536
    networks:
      - app-network
    tty: true
    command: "redis-cli --cluster create redis_1:6380 redis_2:6380 redis_3:6380 redis_4:6380 redis_5:6380 redis_6:6380  --cluster-replicas 1 --cluster-yes"
    depends_on:
      - redis_1
      - redis_2
      - redis_3
      - redis_4
      - redis_5
      - redis_6



#Docker Networks
networks:
  app-network:
    driver: bridge

