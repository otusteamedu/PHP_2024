# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: nginx
    # проброс портов
    ports:
      - "80:80"
    volumes:
       - ./public:/data/mysite.local
    networks:
      - app-network
    depends_on:
      - app1
      - app2
      - app3

  #Контейнер с PHP-FPM, назовём его app
  app1:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app1 # имя контейнера после запуска
    volumes:
       - ./public:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis

  #Контейнер с PHP-FPM, назовём его app
  app2:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app2 # имя контейнера после запуска
    volumes:
      - ./public:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis

  #Контейнер с PHP-FPM, назовём его app
  app3:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app3 # имя контейнера после запуска
    volumes:
      - ./public:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
      
  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"

#Docker Networks
networks:
  app-network:
    driver: bridge